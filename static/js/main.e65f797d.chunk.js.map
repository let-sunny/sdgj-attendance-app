{"version":3,"sources":["Components/Calendar.js","App.js","serviceWorker.js","index.js","sdgj_horizontal_logo.png"],"names":["Calendar","state","dateObject","moment","selectedDay","touched","startX","currentX","weekdayShort","weekdaysShort","firstDayOfMonth","startOf","format","daysInMonth","month","year","onPrev","setState","subtract","onNext","add","onSelect","d","onTouchMove","e","targetTouches","clientX","onTouchEnd","Math","abs","isToday","day","years","months","Number","date","today","isSame","isSunday","isSaturday","isHoliday","holidays","solar","find","holiday","weekdaysName","this","map","i","chineseWeekday","key","className","toUpperCase","blanks","Array","fill","num","classes","push","join","type","name","onClick","totalCells","weeks","week","forEach","cell","length","weeksInMonth","src","Logo","alt","React","Component","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.e65f797d.chunk.js","sourcesContent":["import React from 'react'\nimport moment from 'moment'\nimport 'moment-lunar'\nimport Logo from '../sdgj_horizontal_logo.png';\n\nclass Calendar extends React.Component {\n\tstate = {\n\t\tdateObject: moment(),\n\t\tselectedDay: null,\n\t\ttouched: false,\n\t\tstartX: null,\n\t\tcurrentX: null\n\t};\n\n\tweekdayShort = moment.weekdaysShort();\n\n\tfirstDayOfMonth = () => {\n\t\tconst { dateObject } = this.state;\n\t\treturn moment(dateObject)\n\t\t\t.startOf('month')\n\t\t\t.format('d');\n\t};\n\n\tdaysInMonth = () => {\n\t\treturn this.state.dateObject.daysInMonth();\n\t};\n\n\tmonth = () => {\n\t\treturn this.state.dateObject.format('M');\n\t};\n\n\tyear = () => {\n\t\treturn this.state.dateObject.format('Y');\n\t};\n\n\tonPrev = () => {\n\t\tthis.setState({\n\t\t\tdateObject: this.state.dateObject.subtract(1, 'month'),\n\t\t\tselectedDay: null\n\t\t});\n\t};\n\n\tonNext = () => {\n\t\tthis.setState({\n\t\t\tdateObject: this.state.dateObject.add(1, 'month'),\n\t\t\tselectedDay: null\n\t\t});\n\t};\n\n\tonSelect = (d) => {\n\t\tthis.setState({\n\t\t\tselectedDay: d\n\t\t});\n\t};\n\n\tonTouchMove = (e) => {\n\t\tif (this.state.touched) {\n\t\t\tthis.setState({\n\t\t\t\tcurrentX: e.targetTouches[0].clientX\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tstartX: e.targetTouches[0].clientX,\n\t\t\t\ttouched: true\n\t\t\t});\n\t\t}\n\t};\n\n\tonTouchEnd = () => {\n\t\tconst { currentX, startX } = this.state;\n\t\tif (Math.abs(currentX - startX ) > 130) {\n\t\t\tcurrentX - startX > 0 ? this.onPrev() : this.onNext();\n\t\t}\n\t\tthis.setState({\n\t\t\ttouched: false,\n\t\t\tcurrentX: null,\n\t\t\tstartX: null\n\t\t});\n\t};\n\n\tisToday = (d) => {\n\t\tconst { dateObject } = this.state;\n\t\tconst day = moment({\n\t\t\tyears: dateObject.format('Y'),\n\t\t\tmonths: Number(dateObject.format('MM'))-1,\n\t\t\tdate: d\n\t\t});\n\t\tconst today = moment().format('YYYY-MM-DD');\n\t\treturn !!day.isSame(today)\n\t};\n\n\tisSunday = (d) => {\n\t\tconst { dateObject } = this.state;\n\t\tconst day = moment({\n\t\t\tyears: dateObject.format('Y'),\n\t\t\tmonths: Number(dateObject.format('MM'))-1,\n\t\t\tdate: d\n\t\t}).day();\n\t\treturn day === 0;\n\t};\n\n\tisSaturday = (d) => {\n\t\tconst { dateObject } = this.state;\n\t\tconst day = moment({\n\t\t\tyears: dateObject.format('Y'),\n\t\t\tmonths: Number(dateObject.format('MM'))-1,\n\t\t\tdate: d\n\t\t}).day();\n\t\treturn day === 6;\n\t};\n\n\tisHoliday = (d) => {\n\t\tconst { dateObject } = this.state;\n\t\tconst holidays = [\n\t\t\t// 신정\n\t\t\tmoment({ years: this.year(), months: 0, date: 1}),\n\t\t\t// 설날\n\t\t\tmoment({ years: this.year(), months: 0, date: 1}).solar(),\n\t\t\tmoment({ years: this.year(), months: 0, date: 1}).subtract(1, 'day').solar(),\n\t\t\tmoment({ years: this.year(), months: 0, date: 1}).add(1, 'day').solar(),\n\t\t\t// 3.1\n\t\t\tmoment({ years: this.year(), months: 2, date: 1}),\n\t\t\t// 어린이날\n\t\t\tmoment({ years: this.year(), months: 4, date: 5}),\n\t\t\t// 부처님 오신날\n\t\t\tmoment({ years: this.year(), months: 4, date: 12}),\n\t\t\t// 현충일\n\t\t\tmoment({ years: this.year(), months: 5, date: 6}),\n\t\t\t// 광복절\n\t\t\tmoment({ years: this.year(), months: 7, date: 15}),\n\t\t\t// 추석\n\t\t\tmoment({ years: this.year(), months: 7, date: 15}).solar(),\n\t\t\tmoment({ years: this.year(), months: 7, date: 15}).subtract(1, 'day').solar(),\n\t\t\tmoment({ years: this.year(), months: 7, date: 15}).add(1, 'day').solar(),\n\t\t\t// 개천절\n\t\t\tmoment({ years: this.year(), months: 9, date: 3}),\n\t\t\t// 한글날\n\t\t\tmoment({ years: this.year(), months: 9, date: 9}),\n\t\t\t// 크리스마스\n\t\t\tmoment({ years: this.year(), months: 11, date: 25}),\n\t\t];\n\t\tconst day = moment({\n\t\t\tyears: dateObject.format('Y'),\n\t\t\tmonths: Number(dateObject.format('MM'))-1,\n\t\t\tdate: d\n\t\t});\n\t\treturn !!holidays.find((holiday) => holiday.isSame(day));\n\t};\n\n\trender() {\n\t\tlet weekdaysName = this.weekdayShort.map((day, i) => {\n\t\t\tlet chineseWeekday = '';\n\t\t\tswitch (i) {\n\t\t\t\tcase 0:\n\t\t\t\t\tchineseWeekday = '日';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tchineseWeekday = '月';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tchineseWeekday = '火';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tchineseWeekday = '水';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tchineseWeekday = '木';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tchineseWeekday = '金';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\tchineseWeekday = '土';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<th key={day} className=\"calendar-week-day\">\n\t\t\t\t\t<p className=\"ch\">{chineseWeekday}</p>\n\t\t\t\t\t<p className=\"en\">{day.toUpperCase()}</p>\n\t\t\t\t</th>\n\t\t\t);\n\t\t});\n\n\t\tconst blanks = new Array(Number(this.firstDayOfMonth())).fill(0).map((num, i) => {\n\t\t\treturn (\n\t\t\t\t<td key={`blank-${i}`} className=\"calendar-day blank\">{''}</td>\n\t\t\t);\n\t\t});\n\n\t\tconst daysInMonth = new Array(this.daysInMonth()).fill(0).map((num, i) => {\n\t\t\tconst day = i + 1;\n\n\t\t\t// set class\n\t\t\tconst classes = ['calendar-day'];\n\t\t\tif (this.isToday(day)) classes.push('today');\n\t\t\tif (this.isSunday(day) || this.isHoliday(day)) classes.push('holiday');\n\t\t\tif (this.isSaturday(day)) classes.push('saturday');\n\t\t\treturn (\n\t\t\t\t<td key={day} className={classes.join(' ')}>\n\t\t\t\t\t<button type=\"button\"\n\t\t\t\t\t        name={day} onClick={() => this.onSelect(day)}>{day}</button>\n\t\t\t\t</td>\n\t\t\t);\n\t\t});\n\n\t\tconst totalCells = [...blanks, ...daysInMonth];\n\t\tlet weeks = [];\n\t\tlet week = [];\n\t\ttotalCells.forEach((cell, i) => {\n\t\t\tif (i === 0 || i % 7 !== 0) {\n\t\t\t\tweek.push(cell);\n\t\t\t} else { // new week\n\t\t\t\tweeks.push(week);\n\t\t\t\tweek = [];\n\t\t\t\tweek.push(cell);\n\t\t\t}\n\t\t\t// last day\n\t\t\tif (i === totalCells.length - 1) { weeks.push(week); }\n\t\t});\n\n\t\tlet weeksInMonth = weeks.map((week, i) => {\n\t\t\treturn <tr key={`week-${i}`}>{week}</tr>;\n\t\t});\n\n\t\treturn (\n\t\t\t<div className=\"calendar\"\n\t\t\t     onTouchMove={(e) => this.onTouchMove(e)}\n\t\t\t     onTouchEnd={() => this.onTouchEnd()}>\n\t\t\t\t<section className=\"calendar-header\">\n\t\t\t\t\t<div className=\"calendar-label\">\n\t\t\t\t\t\t<div className=\"calendar-label-month\">{this.month().toUpperCase()}</div>\n\t\t\t\t\t\t<div className=\"calendar-label-year\"> {this.year()}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\n\t\t\t\t<section className=\"calendar-body\">\n\t\t\t\t\t<table className=\"calendar-table\">\n\t\t\t\t\t\t<thead><tr>{weekdaysName}</tr></thead>\n\t\t\t\t\t\t<tbody>{weeksInMonth}</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</section>\n\n\t\t\t\t<section className=\"calendar-footer\">\n\t\t\t\t\t<img src={Logo} alt=\"logo\" />\n\t\t\t\t\t<p className=\"address\">서울 마포구 서교동 358-93</p>\n\t\t\t\t\t<p className=\"copy-rights\">© 2019 시대공작</p>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Calendar;","import React from 'react';\nimport Calendar from './Components/Calendar';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <main>\n                <Calendar />\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/sdgj_horizontal_logo.79e03f6f.png\";"],"sourceRoot":""}